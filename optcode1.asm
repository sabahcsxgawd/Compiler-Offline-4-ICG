.MODEL SMALL
.STACK 1000H
.DATA
	CR EQU 0DH
	LF EQU 0AH
	number DB "00000$"
	i DW DUP 1 (0000H)
	j DW DUP 1 (0000H)
.CODE
main PROC
	MOV AX, @DATA
	MOV DS, AX
	PUSH BP
	MOV BP, SP
	SUB SP, 2
	SUB SP, 2
	SUB SP, 2
	SUB SP, 2
	SUB SP, 2
	SUB SP, 2
	MOV AX, 1
	MOV i, AX
	CALL PRINT_OUTPUT
	CALL NEW_LINE
	MOV AX, 5
	PUSH AX
	MOV AX, 8
	PUSH AX
	POP BX
	POP AX
	ADD AX, BX
	MOV j, AX
	CALL PRINT_OUTPUT
	CALL NEW_LINE
	MOV AX, i
	PUSH AX
	MOV AX, 2
	PUSH AX
	MOV AX, j
	PUSH AX
	POP BX
	POP AX
	CWD
	IMUL BX
	PUSH AX
	POP BX
	POP AX
	ADD AX, BX
	MOV [BP-2], AX
	CALL PRINT_OUTPUT
	CALL NEW_LINE
	MOV AX, [BP-2]
	PUSH AX
	MOV AX, 9
	PUSH AX
	POP BX
	POP AX
	CWD
	IDIV BX
	MOV AX, DX
	MOV [BP-6], AX
	CALL PRINT_OUTPUT
	CALL NEW_LINE
	MOV AX, [BP-6]
	PUSH AX
	MOV AX, [BP-4]
	PUSH AX
	POP BX
	POP AX
	CMP AX, BX
	JLE L12
	MOV AX, 0
	JMP L13
L12:
	MOV AX, 1
L13:
	MOV [BP-8], AX
	CALL PRINT_OUTPUT
	CALL NEW_LINE
	MOV AX, i
	PUSH AX
	MOV AX, j
	PUSH AX
	POP BX
	POP AX
	CMP AX, BX
	JNE L16
	MOV AX, 0
	JMP L17
L16:
	MOV AX, 1
L17:
	MOV [BP-10], AX
	CALL PRINT_OUTPUT
	CALL NEW_LINE
	MOV AX, [BP-8]
	CMP AX, 0
	JNE L20
	MOV AX, [BP-10]
	PUSH AX
	POP BX
	CMP BX, 0
	JNE L20
	MOV AX, 0
	JMP L21
L20:
	MOV AX, 1
L21:
	MOV [BP-12], AX
	CALL PRINT_OUTPUT
	CALL NEW_LINE
	MOV AX, [BP-8]
	CMP AX, 0
	JE L24
	MOV AX, [BP-10]
	PUSH AX
	POP BX
	CMP BX, 0
	JE L24
	MOV AX, 1
	JMP L25
L24:
	MOV AX, 0
L25:
	MOV [BP-12], AX
	CALL PRINT_OUTPUT
	CALL NEW_LINE
	MOV AX, [BP-12]
	MOV CX, [BP-12]
	INC CX
	MOV [BP-12], CX
	MOV AX, [BP-12]
	CALL PRINT_OUTPUT
	CALL NEW_LINE
	MOV AX, [BP-12]
	NEG AX
	MOV [BP-2], AX
	CALL PRINT_OUTPUT
	CALL NEW_LINE
	MOV AX, 0
	JMP L1
L1:
	MOV SP, BP
	POP BP
	MOV AX, 4CH
	INT 21H
main ENDP

PRINT_OUTPUT PROC  ;PRINT WHAT IS IN AX
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	PUSH SI
	LEA SI, NUMBER
	MOV BX, 10
	ADD SI, 4
	CMP AX, 0
	JNGE NEGATE
PRINT:
	XOR DX, DX
	DIV BX
	MOV [SI], DL
	ADD [SI], '0'
	DEC SI
	CMP AX, 0
	JNE PRINT
	INC SI
	LEA DX, SI
	MOV AH, 9
	INT 21H
	POP SI
	POP DX
	POP CX
	POP BX
	POP AX
	RET
NEGATE:
	PUSH AX
	MOV AH, 2
	MOV DL, '-'
	INT 21H
	POP AX
	NEG AX
	JMP PRINT
PRINT_OUTPUT ENDP

NEW_LINE PROC
	PUSH AX
	PUSH DX
	MOV AH, 2
	MOV DL, CR
	INT 21H
	MOV AH, 2
	MOV DL, LF
	INT 21H
	POP DX
	POP AX
	RET
NEW_LINE ENDP

END MAIN
